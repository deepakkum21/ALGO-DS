// https://www.geeksforgeeks.org/find-maximum-path-sum-two-leaves-binary-tree/
// https://www.youtube.com/watch?v=ArNyupe-XH0&list=PL_z_8CaSLPWekqhdCPmFohncHwz8TY2Go&index=49

Maximum path sum from leaf to leaf

If a binary tree is given, how to find Maximum path sum between two leaves of binary tree.

All should be numbers
The maximum sum path may or may not go through root.
For example, in the following binary tree, the maximum sum is 27(3 + 6 + 9 + 0 â€“ 1 + 10). Expected time complexity is O(n).

  -15
 /  \
       5    6
      / \  / \
    -8  1  3  9
    / \       \ 
   2   6       0
       / \
      4  -1
    /
  10

==================================================================

solve(Node root, int result) {

    if(root == null) {
        return 0;
    }

    left = solve(root.left, res);
    right = solve(root.right, res);

    temp = max(left, right) + root.value;
    if(root.right == null || root.left == null) {
        temp = max(temp, root.value);
    }

    ans = max(temp , left+right+ root.value);

    res = max(temp, ans) ;

    return temp;

}

