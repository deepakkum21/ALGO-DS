Given a string, print the longest repeating subsequence such that the two subsequence don’t have same string character at same position, i.e., any i’th character in the two subsequences shouldn’t have the same index in the original string.
Example:
Input: str = "aab"
Output: "a"
The two subsequence are 'a'(first) and 'a'
(second). Note that 'b' cannot be considered
as part of subsequence as it would be at same
index in both.

============================================================

find LCS for string str1 and 2nd string also str1

and for non repeating thing check for i!=j

int solve(String str1, String str2, n, m) {

    if(n == 0 || m==0) {
        return 0;
    }

    if(str1[n]== str2[m] && n!=m) {
        return 1 + solve(str1, str2, n-1, m-1);
    }

    else {
       return  max(solve(str1, str2, n, m-1), solve(str1, str2, n-1, m))
    }

}
